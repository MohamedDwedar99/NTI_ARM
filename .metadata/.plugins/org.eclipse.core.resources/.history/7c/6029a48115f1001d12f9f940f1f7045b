/*
 * NVIC_program.c
 *
 *  Created on: May 12, 2023
 *      Author: es-MohamedHAbdelAziz
 */

#include "Bit_Math.h"
#include "Std_Types.h"

#include "NVIC_config.h"
#include "NVIC_private.h"
#include "NVIC_interface.h"


void		NVIC_voidEnablePerInt(u8 IntNum)
{
	if (IntNum < 32)
	{
        NVIC -> ISER0 = 1 << IntNum;
	}
	else
	{

	}
}
void		NVIC_voidDisablePerInt(u8 IntNum)
{
	if (IntNum < 32)
	{
        NVIC -> ICER0 = 1 << IntNum;
	}
	else
	{

	}
}

void		NVIC_voidSetPendingFlag(u8 IntNum)
{

	if (IntNum < 32)
	{
        NVIC -> ISPR0 = 1 << IntNum;
	}
	else
	{

	}
}
void		NVIC_voidClrPendingFlag(u8 IntNum)
{
	if (IntNum < 32)
	{
        NVIC -> ICPR0 = 1 << IntNum;
	}
	else
	{

	}
}


u8			NVIC_u8ReadActiveFlag(u8 IntNum)
{
	u8 read = 99;
	if (IntNum < 32)
	{
        read = GET_BIT(NVIC -> IABR0, IntNum);
	}
	else
	{

	}
}
