
NTI_Layerd.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000110c  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800123c  08001244  00011244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800123c  0800123c  00011244  2**0
                  CONTENTS
  4 .ARM          00000000  0800123c  0800123c  00011244  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800123c  08001244  00011244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800123c  0800123c  0001123c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001240  08001240  00011240  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00011244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08001244  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08001244  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00011244  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008eb  00000000  00000000  0001126d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004b6  00000000  00000000  00011b58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  00012010  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e8  00000000  00000000  00012160  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000083f  00000000  00000000  00012248  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000bf6  00000000  00000000  00012a87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000042f4  00000000  00000000  0001367d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00017971  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000004d8  00000000  00000000  000179c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08001224 	.word	0x08001224

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08001224 	.word	0x08001224

08000170 <__aeabi_dmul>:
 8000170:	b570      	push	{r4, r5, r6, lr}
 8000172:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000176:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800017a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800017e:	bf1d      	ittte	ne
 8000180:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000184:	ea94 0f0c 	teqne	r4, ip
 8000188:	ea95 0f0c 	teqne	r5, ip
 800018c:	f000 f8de 	bleq	800034c <__aeabi_dmul+0x1dc>
 8000190:	442c      	add	r4, r5
 8000192:	ea81 0603 	eor.w	r6, r1, r3
 8000196:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800019a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800019e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80001a2:	bf18      	it	ne
 80001a4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80001a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80001ac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80001b0:	d038      	beq.n	8000224 <__aeabi_dmul+0xb4>
 80001b2:	fba0 ce02 	umull	ip, lr, r0, r2
 80001b6:	f04f 0500 	mov.w	r5, #0
 80001ba:	fbe1 e502 	umlal	lr, r5, r1, r2
 80001be:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80001c2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80001c6:	f04f 0600 	mov.w	r6, #0
 80001ca:	fbe1 5603 	umlal	r5, r6, r1, r3
 80001ce:	f09c 0f00 	teq	ip, #0
 80001d2:	bf18      	it	ne
 80001d4:	f04e 0e01 	orrne.w	lr, lr, #1
 80001d8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80001dc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80001e0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80001e4:	d204      	bcs.n	80001f0 <__aeabi_dmul+0x80>
 80001e6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80001ea:	416d      	adcs	r5, r5
 80001ec:	eb46 0606 	adc.w	r6, r6, r6
 80001f0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80001f4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80001f8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80001fc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000200:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000204:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000208:	bf88      	it	hi
 800020a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800020e:	d81e      	bhi.n	800024e <__aeabi_dmul+0xde>
 8000210:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000214:	bf08      	it	eq
 8000216:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800021a:	f150 0000 	adcs.w	r0, r0, #0
 800021e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000222:	bd70      	pop	{r4, r5, r6, pc}
 8000224:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000228:	ea46 0101 	orr.w	r1, r6, r1
 800022c:	ea40 0002 	orr.w	r0, r0, r2
 8000230:	ea81 0103 	eor.w	r1, r1, r3
 8000234:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000238:	bfc2      	ittt	gt
 800023a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800023e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000242:	bd70      	popgt	{r4, r5, r6, pc}
 8000244:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000248:	f04f 0e00 	mov.w	lr, #0
 800024c:	3c01      	subs	r4, #1
 800024e:	f300 80ab 	bgt.w	80003a8 <__aeabi_dmul+0x238>
 8000252:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000256:	bfde      	ittt	le
 8000258:	2000      	movle	r0, #0
 800025a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800025e:	bd70      	pople	{r4, r5, r6, pc}
 8000260:	f1c4 0400 	rsb	r4, r4, #0
 8000264:	3c20      	subs	r4, #32
 8000266:	da35      	bge.n	80002d4 <__aeabi_dmul+0x164>
 8000268:	340c      	adds	r4, #12
 800026a:	dc1b      	bgt.n	80002a4 <__aeabi_dmul+0x134>
 800026c:	f104 0414 	add.w	r4, r4, #20
 8000270:	f1c4 0520 	rsb	r5, r4, #32
 8000274:	fa00 f305 	lsl.w	r3, r0, r5
 8000278:	fa20 f004 	lsr.w	r0, r0, r4
 800027c:	fa01 f205 	lsl.w	r2, r1, r5
 8000280:	ea40 0002 	orr.w	r0, r0, r2
 8000284:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000288:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800028c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000290:	fa21 f604 	lsr.w	r6, r1, r4
 8000294:	eb42 0106 	adc.w	r1, r2, r6
 8000298:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800029c:	bf08      	it	eq
 800029e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80002a2:	bd70      	pop	{r4, r5, r6, pc}
 80002a4:	f1c4 040c 	rsb	r4, r4, #12
 80002a8:	f1c4 0520 	rsb	r5, r4, #32
 80002ac:	fa00 f304 	lsl.w	r3, r0, r4
 80002b0:	fa20 f005 	lsr.w	r0, r0, r5
 80002b4:	fa01 f204 	lsl.w	r2, r1, r4
 80002b8:	ea40 0002 	orr.w	r0, r0, r2
 80002bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80002c0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80002c4:	f141 0100 	adc.w	r1, r1, #0
 80002c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80002cc:	bf08      	it	eq
 80002ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80002d2:	bd70      	pop	{r4, r5, r6, pc}
 80002d4:	f1c4 0520 	rsb	r5, r4, #32
 80002d8:	fa00 f205 	lsl.w	r2, r0, r5
 80002dc:	ea4e 0e02 	orr.w	lr, lr, r2
 80002e0:	fa20 f304 	lsr.w	r3, r0, r4
 80002e4:	fa01 f205 	lsl.w	r2, r1, r5
 80002e8:	ea43 0302 	orr.w	r3, r3, r2
 80002ec:	fa21 f004 	lsr.w	r0, r1, r4
 80002f0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80002f4:	fa21 f204 	lsr.w	r2, r1, r4
 80002f8:	ea20 0002 	bic.w	r0, r0, r2
 80002fc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000300:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000304:	bf08      	it	eq
 8000306:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800030a:	bd70      	pop	{r4, r5, r6, pc}
 800030c:	f094 0f00 	teq	r4, #0
 8000310:	d10f      	bne.n	8000332 <__aeabi_dmul+0x1c2>
 8000312:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000316:	0040      	lsls	r0, r0, #1
 8000318:	eb41 0101 	adc.w	r1, r1, r1
 800031c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000320:	bf08      	it	eq
 8000322:	3c01      	subeq	r4, #1
 8000324:	d0f7      	beq.n	8000316 <__aeabi_dmul+0x1a6>
 8000326:	ea41 0106 	orr.w	r1, r1, r6
 800032a:	f095 0f00 	teq	r5, #0
 800032e:	bf18      	it	ne
 8000330:	4770      	bxne	lr
 8000332:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000336:	0052      	lsls	r2, r2, #1
 8000338:	eb43 0303 	adc.w	r3, r3, r3
 800033c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000340:	bf08      	it	eq
 8000342:	3d01      	subeq	r5, #1
 8000344:	d0f7      	beq.n	8000336 <__aeabi_dmul+0x1c6>
 8000346:	ea43 0306 	orr.w	r3, r3, r6
 800034a:	4770      	bx	lr
 800034c:	ea94 0f0c 	teq	r4, ip
 8000350:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000354:	bf18      	it	ne
 8000356:	ea95 0f0c 	teqne	r5, ip
 800035a:	d00c      	beq.n	8000376 <__aeabi_dmul+0x206>
 800035c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000360:	bf18      	it	ne
 8000362:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000366:	d1d1      	bne.n	800030c <__aeabi_dmul+0x19c>
 8000368:	ea81 0103 	eor.w	r1, r1, r3
 800036c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000370:	f04f 0000 	mov.w	r0, #0
 8000374:	bd70      	pop	{r4, r5, r6, pc}
 8000376:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800037a:	bf06      	itte	eq
 800037c:	4610      	moveq	r0, r2
 800037e:	4619      	moveq	r1, r3
 8000380:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000384:	d019      	beq.n	80003ba <__aeabi_dmul+0x24a>
 8000386:	ea94 0f0c 	teq	r4, ip
 800038a:	d102      	bne.n	8000392 <__aeabi_dmul+0x222>
 800038c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000390:	d113      	bne.n	80003ba <__aeabi_dmul+0x24a>
 8000392:	ea95 0f0c 	teq	r5, ip
 8000396:	d105      	bne.n	80003a4 <__aeabi_dmul+0x234>
 8000398:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800039c:	bf1c      	itt	ne
 800039e:	4610      	movne	r0, r2
 80003a0:	4619      	movne	r1, r3
 80003a2:	d10a      	bne.n	80003ba <__aeabi_dmul+0x24a>
 80003a4:	ea81 0103 	eor.w	r1, r1, r3
 80003a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003ac:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd70      	pop	{r4, r5, r6, pc}
 80003ba:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80003be:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80003c2:	bd70      	pop	{r4, r5, r6, pc}

080003c4 <__aeabi_drsub>:
 80003c4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80003c8:	e002      	b.n	80003d0 <__adddf3>
 80003ca:	bf00      	nop

080003cc <__aeabi_dsub>:
 80003cc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080003d0 <__adddf3>:
 80003d0:	b530      	push	{r4, r5, lr}
 80003d2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80003d6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80003da:	ea94 0f05 	teq	r4, r5
 80003de:	bf08      	it	eq
 80003e0:	ea90 0f02 	teqeq	r0, r2
 80003e4:	bf1f      	itttt	ne
 80003e6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80003ea:	ea55 0c02 	orrsne.w	ip, r5, r2
 80003ee:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80003f2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003f6:	f000 80e2 	beq.w	80005be <__adddf3+0x1ee>
 80003fa:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80003fe:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000402:	bfb8      	it	lt
 8000404:	426d      	neglt	r5, r5
 8000406:	dd0c      	ble.n	8000422 <__adddf3+0x52>
 8000408:	442c      	add	r4, r5
 800040a:	ea80 0202 	eor.w	r2, r0, r2
 800040e:	ea81 0303 	eor.w	r3, r1, r3
 8000412:	ea82 0000 	eor.w	r0, r2, r0
 8000416:	ea83 0101 	eor.w	r1, r3, r1
 800041a:	ea80 0202 	eor.w	r2, r0, r2
 800041e:	ea81 0303 	eor.w	r3, r1, r3
 8000422:	2d36      	cmp	r5, #54	; 0x36
 8000424:	bf88      	it	hi
 8000426:	bd30      	pophi	{r4, r5, pc}
 8000428:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800042c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000430:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000434:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000438:	d002      	beq.n	8000440 <__adddf3+0x70>
 800043a:	4240      	negs	r0, r0
 800043c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000440:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000444:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000448:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800044c:	d002      	beq.n	8000454 <__adddf3+0x84>
 800044e:	4252      	negs	r2, r2
 8000450:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000454:	ea94 0f05 	teq	r4, r5
 8000458:	f000 80a7 	beq.w	80005aa <__adddf3+0x1da>
 800045c:	f1a4 0401 	sub.w	r4, r4, #1
 8000460:	f1d5 0e20 	rsbs	lr, r5, #32
 8000464:	db0d      	blt.n	8000482 <__adddf3+0xb2>
 8000466:	fa02 fc0e 	lsl.w	ip, r2, lr
 800046a:	fa22 f205 	lsr.w	r2, r2, r5
 800046e:	1880      	adds	r0, r0, r2
 8000470:	f141 0100 	adc.w	r1, r1, #0
 8000474:	fa03 f20e 	lsl.w	r2, r3, lr
 8000478:	1880      	adds	r0, r0, r2
 800047a:	fa43 f305 	asr.w	r3, r3, r5
 800047e:	4159      	adcs	r1, r3
 8000480:	e00e      	b.n	80004a0 <__adddf3+0xd0>
 8000482:	f1a5 0520 	sub.w	r5, r5, #32
 8000486:	f10e 0e20 	add.w	lr, lr, #32
 800048a:	2a01      	cmp	r2, #1
 800048c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000490:	bf28      	it	cs
 8000492:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000496:	fa43 f305 	asr.w	r3, r3, r5
 800049a:	18c0      	adds	r0, r0, r3
 800049c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80004a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004a4:	d507      	bpl.n	80004b6 <__adddf3+0xe6>
 80004a6:	f04f 0e00 	mov.w	lr, #0
 80004aa:	f1dc 0c00 	rsbs	ip, ip, #0
 80004ae:	eb7e 0000 	sbcs.w	r0, lr, r0
 80004b2:	eb6e 0101 	sbc.w	r1, lr, r1
 80004b6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80004ba:	d31b      	bcc.n	80004f4 <__adddf3+0x124>
 80004bc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80004c0:	d30c      	bcc.n	80004dc <__adddf3+0x10c>
 80004c2:	0849      	lsrs	r1, r1, #1
 80004c4:	ea5f 0030 	movs.w	r0, r0, rrx
 80004c8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80004cc:	f104 0401 	add.w	r4, r4, #1
 80004d0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80004d4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80004d8:	f080 809a 	bcs.w	8000610 <__adddf3+0x240>
 80004dc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80004e0:	bf08      	it	eq
 80004e2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80004e6:	f150 0000 	adcs.w	r0, r0, #0
 80004ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80004ee:	ea41 0105 	orr.w	r1, r1, r5
 80004f2:	bd30      	pop	{r4, r5, pc}
 80004f4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80004f8:	4140      	adcs	r0, r0
 80004fa:	eb41 0101 	adc.w	r1, r1, r1
 80004fe:	3c01      	subs	r4, #1
 8000500:	bf28      	it	cs
 8000502:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000506:	d2e9      	bcs.n	80004dc <__adddf3+0x10c>
 8000508:	f091 0f00 	teq	r1, #0
 800050c:	bf04      	itt	eq
 800050e:	4601      	moveq	r1, r0
 8000510:	2000      	moveq	r0, #0
 8000512:	fab1 f381 	clz	r3, r1
 8000516:	bf08      	it	eq
 8000518:	3320      	addeq	r3, #32
 800051a:	f1a3 030b 	sub.w	r3, r3, #11
 800051e:	f1b3 0220 	subs.w	r2, r3, #32
 8000522:	da0c      	bge.n	800053e <__adddf3+0x16e>
 8000524:	320c      	adds	r2, #12
 8000526:	dd08      	ble.n	800053a <__adddf3+0x16a>
 8000528:	f102 0c14 	add.w	ip, r2, #20
 800052c:	f1c2 020c 	rsb	r2, r2, #12
 8000530:	fa01 f00c 	lsl.w	r0, r1, ip
 8000534:	fa21 f102 	lsr.w	r1, r1, r2
 8000538:	e00c      	b.n	8000554 <__adddf3+0x184>
 800053a:	f102 0214 	add.w	r2, r2, #20
 800053e:	bfd8      	it	le
 8000540:	f1c2 0c20 	rsble	ip, r2, #32
 8000544:	fa01 f102 	lsl.w	r1, r1, r2
 8000548:	fa20 fc0c 	lsr.w	ip, r0, ip
 800054c:	bfdc      	itt	le
 800054e:	ea41 010c 	orrle.w	r1, r1, ip
 8000552:	4090      	lslle	r0, r2
 8000554:	1ae4      	subs	r4, r4, r3
 8000556:	bfa2      	ittt	ge
 8000558:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800055c:	4329      	orrge	r1, r5
 800055e:	bd30      	popge	{r4, r5, pc}
 8000560:	ea6f 0404 	mvn.w	r4, r4
 8000564:	3c1f      	subs	r4, #31
 8000566:	da1c      	bge.n	80005a2 <__adddf3+0x1d2>
 8000568:	340c      	adds	r4, #12
 800056a:	dc0e      	bgt.n	800058a <__adddf3+0x1ba>
 800056c:	f104 0414 	add.w	r4, r4, #20
 8000570:	f1c4 0220 	rsb	r2, r4, #32
 8000574:	fa20 f004 	lsr.w	r0, r0, r4
 8000578:	fa01 f302 	lsl.w	r3, r1, r2
 800057c:	ea40 0003 	orr.w	r0, r0, r3
 8000580:	fa21 f304 	lsr.w	r3, r1, r4
 8000584:	ea45 0103 	orr.w	r1, r5, r3
 8000588:	bd30      	pop	{r4, r5, pc}
 800058a:	f1c4 040c 	rsb	r4, r4, #12
 800058e:	f1c4 0220 	rsb	r2, r4, #32
 8000592:	fa20 f002 	lsr.w	r0, r0, r2
 8000596:	fa01 f304 	lsl.w	r3, r1, r4
 800059a:	ea40 0003 	orr.w	r0, r0, r3
 800059e:	4629      	mov	r1, r5
 80005a0:	bd30      	pop	{r4, r5, pc}
 80005a2:	fa21 f004 	lsr.w	r0, r1, r4
 80005a6:	4629      	mov	r1, r5
 80005a8:	bd30      	pop	{r4, r5, pc}
 80005aa:	f094 0f00 	teq	r4, #0
 80005ae:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80005b2:	bf06      	itte	eq
 80005b4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80005b8:	3401      	addeq	r4, #1
 80005ba:	3d01      	subne	r5, #1
 80005bc:	e74e      	b.n	800045c <__adddf3+0x8c>
 80005be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005c2:	bf18      	it	ne
 80005c4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005c8:	d029      	beq.n	800061e <__adddf3+0x24e>
 80005ca:	ea94 0f05 	teq	r4, r5
 80005ce:	bf08      	it	eq
 80005d0:	ea90 0f02 	teqeq	r0, r2
 80005d4:	d005      	beq.n	80005e2 <__adddf3+0x212>
 80005d6:	ea54 0c00 	orrs.w	ip, r4, r0
 80005da:	bf04      	itt	eq
 80005dc:	4619      	moveq	r1, r3
 80005de:	4610      	moveq	r0, r2
 80005e0:	bd30      	pop	{r4, r5, pc}
 80005e2:	ea91 0f03 	teq	r1, r3
 80005e6:	bf1e      	ittt	ne
 80005e8:	2100      	movne	r1, #0
 80005ea:	2000      	movne	r0, #0
 80005ec:	bd30      	popne	{r4, r5, pc}
 80005ee:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80005f2:	d105      	bne.n	8000600 <__adddf3+0x230>
 80005f4:	0040      	lsls	r0, r0, #1
 80005f6:	4149      	adcs	r1, r1
 80005f8:	bf28      	it	cs
 80005fa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80005fe:	bd30      	pop	{r4, r5, pc}
 8000600:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000604:	bf3c      	itt	cc
 8000606:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800060a:	bd30      	popcc	{r4, r5, pc}
 800060c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000610:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000614:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000618:	f04f 0000 	mov.w	r0, #0
 800061c:	bd30      	pop	{r4, r5, pc}
 800061e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000622:	bf1a      	itte	ne
 8000624:	4619      	movne	r1, r3
 8000626:	4610      	movne	r0, r2
 8000628:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800062c:	bf1c      	itt	ne
 800062e:	460b      	movne	r3, r1
 8000630:	4602      	movne	r2, r0
 8000632:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000636:	bf06      	itte	eq
 8000638:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800063c:	ea91 0f03 	teqeq	r1, r3
 8000640:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000644:	bd30      	pop	{r4, r5, pc}
 8000646:	bf00      	nop

08000648 <__aeabi_ui2d>:
 8000648:	f090 0f00 	teq	r0, #0
 800064c:	bf04      	itt	eq
 800064e:	2100      	moveq	r1, #0
 8000650:	4770      	bxeq	lr
 8000652:	b530      	push	{r4, r5, lr}
 8000654:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000658:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800065c:	f04f 0500 	mov.w	r5, #0
 8000660:	f04f 0100 	mov.w	r1, #0
 8000664:	e750      	b.n	8000508 <__adddf3+0x138>
 8000666:	bf00      	nop

08000668 <__aeabi_i2d>:
 8000668:	f090 0f00 	teq	r0, #0
 800066c:	bf04      	itt	eq
 800066e:	2100      	moveq	r1, #0
 8000670:	4770      	bxeq	lr
 8000672:	b530      	push	{r4, r5, lr}
 8000674:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000678:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800067c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000680:	bf48      	it	mi
 8000682:	4240      	negmi	r0, r0
 8000684:	f04f 0100 	mov.w	r1, #0
 8000688:	e73e      	b.n	8000508 <__adddf3+0x138>
 800068a:	bf00      	nop

0800068c <__aeabi_f2d>:
 800068c:	0042      	lsls	r2, r0, #1
 800068e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000692:	ea4f 0131 	mov.w	r1, r1, rrx
 8000696:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800069a:	bf1f      	itttt	ne
 800069c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80006a0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80006a4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80006a8:	4770      	bxne	lr
 80006aa:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80006ae:	bf08      	it	eq
 80006b0:	4770      	bxeq	lr
 80006b2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80006b6:	bf04      	itt	eq
 80006b8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80006bc:	4770      	bxeq	lr
 80006be:	b530      	push	{r4, r5, lr}
 80006c0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80006c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80006c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006cc:	e71c      	b.n	8000508 <__adddf3+0x138>
 80006ce:	bf00      	nop

080006d0 <__aeabi_ul2d>:
 80006d0:	ea50 0201 	orrs.w	r2, r0, r1
 80006d4:	bf08      	it	eq
 80006d6:	4770      	bxeq	lr
 80006d8:	b530      	push	{r4, r5, lr}
 80006da:	f04f 0500 	mov.w	r5, #0
 80006de:	e00a      	b.n	80006f6 <__aeabi_l2d+0x16>

080006e0 <__aeabi_l2d>:
 80006e0:	ea50 0201 	orrs.w	r2, r0, r1
 80006e4:	bf08      	it	eq
 80006e6:	4770      	bxeq	lr
 80006e8:	b530      	push	{r4, r5, lr}
 80006ea:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80006ee:	d502      	bpl.n	80006f6 <__aeabi_l2d+0x16>
 80006f0:	4240      	negs	r0, r0
 80006f2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006f6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006fa:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006fe:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000702:	f43f aed8 	beq.w	80004b6 <__adddf3+0xe6>
 8000706:	f04f 0203 	mov.w	r2, #3
 800070a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800070e:	bf18      	it	ne
 8000710:	3203      	addne	r2, #3
 8000712:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000716:	bf18      	it	ne
 8000718:	3203      	addne	r2, #3
 800071a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800071e:	f1c2 0320 	rsb	r3, r2, #32
 8000722:	fa00 fc03 	lsl.w	ip, r0, r3
 8000726:	fa20 f002 	lsr.w	r0, r0, r2
 800072a:	fa01 fe03 	lsl.w	lr, r1, r3
 800072e:	ea40 000e 	orr.w	r0, r0, lr
 8000732:	fa21 f102 	lsr.w	r1, r1, r2
 8000736:	4414      	add	r4, r2
 8000738:	e6bd      	b.n	80004b6 <__adddf3+0xe6>
 800073a:	bf00      	nop

0800073c <__aeabi_d2f>:
 800073c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000740:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000744:	bf24      	itt	cs
 8000746:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800074a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800074e:	d90d      	bls.n	800076c <__aeabi_d2f+0x30>
 8000750:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000754:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000758:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800075c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000760:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000764:	bf08      	it	eq
 8000766:	f020 0001 	biceq.w	r0, r0, #1
 800076a:	4770      	bx	lr
 800076c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000770:	d121      	bne.n	80007b6 <__aeabi_d2f+0x7a>
 8000772:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000776:	bfbc      	itt	lt
 8000778:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800077c:	4770      	bxlt	lr
 800077e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000782:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000786:	f1c2 0218 	rsb	r2, r2, #24
 800078a:	f1c2 0c20 	rsb	ip, r2, #32
 800078e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000792:	fa20 f002 	lsr.w	r0, r0, r2
 8000796:	bf18      	it	ne
 8000798:	f040 0001 	orrne.w	r0, r0, #1
 800079c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80007a0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80007a4:	fa03 fc0c 	lsl.w	ip, r3, ip
 80007a8:	ea40 000c 	orr.w	r0, r0, ip
 80007ac:	fa23 f302 	lsr.w	r3, r3, r2
 80007b0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80007b4:	e7cc      	b.n	8000750 <__aeabi_d2f+0x14>
 80007b6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80007ba:	d107      	bne.n	80007cc <__aeabi_d2f+0x90>
 80007bc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80007c0:	bf1e      	ittt	ne
 80007c2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80007c6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80007ca:	4770      	bxne	lr
 80007cc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80007d0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80007d4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <__aeabi_frsub>:
 80007dc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 80007e0:	e002      	b.n	80007e8 <__addsf3>
 80007e2:	bf00      	nop

080007e4 <__aeabi_fsub>:
 80007e4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

080007e8 <__addsf3>:
 80007e8:	0042      	lsls	r2, r0, #1
 80007ea:	bf1f      	itttt	ne
 80007ec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 80007f0:	ea92 0f03 	teqne	r2, r3
 80007f4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 80007f8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80007fc:	d06a      	beq.n	80008d4 <__addsf3+0xec>
 80007fe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000802:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000806:	bfc1      	itttt	gt
 8000808:	18d2      	addgt	r2, r2, r3
 800080a:	4041      	eorgt	r1, r0
 800080c:	4048      	eorgt	r0, r1
 800080e:	4041      	eorgt	r1, r0
 8000810:	bfb8      	it	lt
 8000812:	425b      	neglt	r3, r3
 8000814:	2b19      	cmp	r3, #25
 8000816:	bf88      	it	hi
 8000818:	4770      	bxhi	lr
 800081a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800081e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000822:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000826:	bf18      	it	ne
 8000828:	4240      	negne	r0, r0
 800082a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800082e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000832:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000836:	bf18      	it	ne
 8000838:	4249      	negne	r1, r1
 800083a:	ea92 0f03 	teq	r2, r3
 800083e:	d03f      	beq.n	80008c0 <__addsf3+0xd8>
 8000840:	f1a2 0201 	sub.w	r2, r2, #1
 8000844:	fa41 fc03 	asr.w	ip, r1, r3
 8000848:	eb10 000c 	adds.w	r0, r0, ip
 800084c:	f1c3 0320 	rsb	r3, r3, #32
 8000850:	fa01 f103 	lsl.w	r1, r1, r3
 8000854:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000858:	d502      	bpl.n	8000860 <__addsf3+0x78>
 800085a:	4249      	negs	r1, r1
 800085c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000860:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000864:	d313      	bcc.n	800088e <__addsf3+0xa6>
 8000866:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800086a:	d306      	bcc.n	800087a <__addsf3+0x92>
 800086c:	0840      	lsrs	r0, r0, #1
 800086e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000872:	f102 0201 	add.w	r2, r2, #1
 8000876:	2afe      	cmp	r2, #254	; 0xfe
 8000878:	d251      	bcs.n	800091e <__addsf3+0x136>
 800087a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 800087e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000882:	bf08      	it	eq
 8000884:	f020 0001 	biceq.w	r0, r0, #1
 8000888:	ea40 0003 	orr.w	r0, r0, r3
 800088c:	4770      	bx	lr
 800088e:	0049      	lsls	r1, r1, #1
 8000890:	eb40 0000 	adc.w	r0, r0, r0
 8000894:	3a01      	subs	r2, #1
 8000896:	bf28      	it	cs
 8000898:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 800089c:	d2ed      	bcs.n	800087a <__addsf3+0x92>
 800089e:	fab0 fc80 	clz	ip, r0
 80008a2:	f1ac 0c08 	sub.w	ip, ip, #8
 80008a6:	ebb2 020c 	subs.w	r2, r2, ip
 80008aa:	fa00 f00c 	lsl.w	r0, r0, ip
 80008ae:	bfaa      	itet	ge
 80008b0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 80008b4:	4252      	neglt	r2, r2
 80008b6:	4318      	orrge	r0, r3
 80008b8:	bfbc      	itt	lt
 80008ba:	40d0      	lsrlt	r0, r2
 80008bc:	4318      	orrlt	r0, r3
 80008be:	4770      	bx	lr
 80008c0:	f092 0f00 	teq	r2, #0
 80008c4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 80008c8:	bf06      	itte	eq
 80008ca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 80008ce:	3201      	addeq	r2, #1
 80008d0:	3b01      	subne	r3, #1
 80008d2:	e7b5      	b.n	8000840 <__addsf3+0x58>
 80008d4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80008d8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80008dc:	bf18      	it	ne
 80008de:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80008e2:	d021      	beq.n	8000928 <__addsf3+0x140>
 80008e4:	ea92 0f03 	teq	r2, r3
 80008e8:	d004      	beq.n	80008f4 <__addsf3+0x10c>
 80008ea:	f092 0f00 	teq	r2, #0
 80008ee:	bf08      	it	eq
 80008f0:	4608      	moveq	r0, r1
 80008f2:	4770      	bx	lr
 80008f4:	ea90 0f01 	teq	r0, r1
 80008f8:	bf1c      	itt	ne
 80008fa:	2000      	movne	r0, #0
 80008fc:	4770      	bxne	lr
 80008fe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000902:	d104      	bne.n	800090e <__addsf3+0x126>
 8000904:	0040      	lsls	r0, r0, #1
 8000906:	bf28      	it	cs
 8000908:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 800090c:	4770      	bx	lr
 800090e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000912:	bf3c      	itt	cc
 8000914:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000918:	4770      	bxcc	lr
 800091a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800091e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000922:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000926:	4770      	bx	lr
 8000928:	ea7f 6222 	mvns.w	r2, r2, asr #24
 800092c:	bf16      	itet	ne
 800092e:	4608      	movne	r0, r1
 8000930:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000934:	4601      	movne	r1, r0
 8000936:	0242      	lsls	r2, r0, #9
 8000938:	bf06      	itte	eq
 800093a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 800093e:	ea90 0f01 	teqeq	r0, r1
 8000942:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000946:	4770      	bx	lr

08000948 <__aeabi_ui2f>:
 8000948:	f04f 0300 	mov.w	r3, #0
 800094c:	e004      	b.n	8000958 <__aeabi_i2f+0x8>
 800094e:	bf00      	nop

08000950 <__aeabi_i2f>:
 8000950:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000954:	bf48      	it	mi
 8000956:	4240      	negmi	r0, r0
 8000958:	ea5f 0c00 	movs.w	ip, r0
 800095c:	bf08      	it	eq
 800095e:	4770      	bxeq	lr
 8000960:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000964:	4601      	mov	r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	e01c      	b.n	80009a6 <__aeabi_l2f+0x2a>

0800096c <__aeabi_ul2f>:
 800096c:	ea50 0201 	orrs.w	r2, r0, r1
 8000970:	bf08      	it	eq
 8000972:	4770      	bxeq	lr
 8000974:	f04f 0300 	mov.w	r3, #0
 8000978:	e00a      	b.n	8000990 <__aeabi_l2f+0x14>
 800097a:	bf00      	nop

0800097c <__aeabi_l2f>:
 800097c:	ea50 0201 	orrs.w	r2, r0, r1
 8000980:	bf08      	it	eq
 8000982:	4770      	bxeq	lr
 8000984:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000988:	d502      	bpl.n	8000990 <__aeabi_l2f+0x14>
 800098a:	4240      	negs	r0, r0
 800098c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000990:	ea5f 0c01 	movs.w	ip, r1
 8000994:	bf02      	ittt	eq
 8000996:	4684      	moveq	ip, r0
 8000998:	4601      	moveq	r1, r0
 800099a:	2000      	moveq	r0, #0
 800099c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 80009a0:	bf08      	it	eq
 80009a2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 80009a6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 80009aa:	fabc f28c 	clz	r2, ip
 80009ae:	3a08      	subs	r2, #8
 80009b0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 80009b4:	db10      	blt.n	80009d8 <__aeabi_l2f+0x5c>
 80009b6:	fa01 fc02 	lsl.w	ip, r1, r2
 80009ba:	4463      	add	r3, ip
 80009bc:	fa00 fc02 	lsl.w	ip, r0, r2
 80009c0:	f1c2 0220 	rsb	r2, r2, #32
 80009c4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80009c8:	fa20 f202 	lsr.w	r2, r0, r2
 80009cc:	eb43 0002 	adc.w	r0, r3, r2
 80009d0:	bf08      	it	eq
 80009d2:	f020 0001 	biceq.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	f102 0220 	add.w	r2, r2, #32
 80009dc:	fa01 fc02 	lsl.w	ip, r1, r2
 80009e0:	f1c2 0220 	rsb	r2, r2, #32
 80009e4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 80009e8:	fa21 f202 	lsr.w	r2, r1, r2
 80009ec:	eb43 0002 	adc.w	r0, r3, r2
 80009f0:	bf08      	it	eq
 80009f2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80009f6:	4770      	bx	lr

080009f8 <__aeabi_fmul>:
 80009f8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80009fc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000a00:	bf1e      	ittt	ne
 8000a02:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000a06:	ea92 0f0c 	teqne	r2, ip
 8000a0a:	ea93 0f0c 	teqne	r3, ip
 8000a0e:	d06f      	beq.n	8000af0 <__aeabi_fmul+0xf8>
 8000a10:	441a      	add	r2, r3
 8000a12:	ea80 0c01 	eor.w	ip, r0, r1
 8000a16:	0240      	lsls	r0, r0, #9
 8000a18:	bf18      	it	ne
 8000a1a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000a1e:	d01e      	beq.n	8000a5e <__aeabi_fmul+0x66>
 8000a20:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000a24:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000a28:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000a2c:	fba0 3101 	umull	r3, r1, r0, r1
 8000a30:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000a34:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000a38:	bf3e      	ittt	cc
 8000a3a:	0049      	lslcc	r1, r1, #1
 8000a3c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000a40:	005b      	lslcc	r3, r3, #1
 8000a42:	ea40 0001 	orr.w	r0, r0, r1
 8000a46:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000a4a:	2afd      	cmp	r2, #253	; 0xfd
 8000a4c:	d81d      	bhi.n	8000a8a <__aeabi_fmul+0x92>
 8000a4e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000a52:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000a56:	bf08      	it	eq
 8000a58:	f020 0001 	biceq.w	r0, r0, #1
 8000a5c:	4770      	bx	lr
 8000a5e:	f090 0f00 	teq	r0, #0
 8000a62:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000a66:	bf08      	it	eq
 8000a68:	0249      	lsleq	r1, r1, #9
 8000a6a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000a6e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000a72:	3a7f      	subs	r2, #127	; 0x7f
 8000a74:	bfc2      	ittt	gt
 8000a76:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000a7a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000a7e:	4770      	bxgt	lr
 8000a80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000a84:	f04f 0300 	mov.w	r3, #0
 8000a88:	3a01      	subs	r2, #1
 8000a8a:	dc5d      	bgt.n	8000b48 <__aeabi_fmul+0x150>
 8000a8c:	f112 0f19 	cmn.w	r2, #25
 8000a90:	bfdc      	itt	le
 8000a92:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000a96:	4770      	bxle	lr
 8000a98:	f1c2 0200 	rsb	r2, r2, #0
 8000a9c:	0041      	lsls	r1, r0, #1
 8000a9e:	fa21 f102 	lsr.w	r1, r1, r2
 8000aa2:	f1c2 0220 	rsb	r2, r2, #32
 8000aa6:	fa00 fc02 	lsl.w	ip, r0, r2
 8000aaa:	ea5f 0031 	movs.w	r0, r1, rrx
 8000aae:	f140 0000 	adc.w	r0, r0, #0
 8000ab2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000ab6:	bf08      	it	eq
 8000ab8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000abc:	4770      	bx	lr
 8000abe:	f092 0f00 	teq	r2, #0
 8000ac2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000ac6:	bf02      	ittt	eq
 8000ac8:	0040      	lsleq	r0, r0, #1
 8000aca:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000ace:	3a01      	subeq	r2, #1
 8000ad0:	d0f9      	beq.n	8000ac6 <__aeabi_fmul+0xce>
 8000ad2:	ea40 000c 	orr.w	r0, r0, ip
 8000ad6:	f093 0f00 	teq	r3, #0
 8000ada:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ade:	bf02      	ittt	eq
 8000ae0:	0049      	lsleq	r1, r1, #1
 8000ae2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000ae6:	3b01      	subeq	r3, #1
 8000ae8:	d0f9      	beq.n	8000ade <__aeabi_fmul+0xe6>
 8000aea:	ea41 010c 	orr.w	r1, r1, ip
 8000aee:	e78f      	b.n	8000a10 <__aeabi_fmul+0x18>
 8000af0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000af4:	ea92 0f0c 	teq	r2, ip
 8000af8:	bf18      	it	ne
 8000afa:	ea93 0f0c 	teqne	r3, ip
 8000afe:	d00a      	beq.n	8000b16 <__aeabi_fmul+0x11e>
 8000b00:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000b04:	bf18      	it	ne
 8000b06:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000b0a:	d1d8      	bne.n	8000abe <__aeabi_fmul+0xc6>
 8000b0c:	ea80 0001 	eor.w	r0, r0, r1
 8000b10:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000b14:	4770      	bx	lr
 8000b16:	f090 0f00 	teq	r0, #0
 8000b1a:	bf17      	itett	ne
 8000b1c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000b20:	4608      	moveq	r0, r1
 8000b22:	f091 0f00 	teqne	r1, #0
 8000b26:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000b2a:	d014      	beq.n	8000b56 <__aeabi_fmul+0x15e>
 8000b2c:	ea92 0f0c 	teq	r2, ip
 8000b30:	d101      	bne.n	8000b36 <__aeabi_fmul+0x13e>
 8000b32:	0242      	lsls	r2, r0, #9
 8000b34:	d10f      	bne.n	8000b56 <__aeabi_fmul+0x15e>
 8000b36:	ea93 0f0c 	teq	r3, ip
 8000b3a:	d103      	bne.n	8000b44 <__aeabi_fmul+0x14c>
 8000b3c:	024b      	lsls	r3, r1, #9
 8000b3e:	bf18      	it	ne
 8000b40:	4608      	movne	r0, r1
 8000b42:	d108      	bne.n	8000b56 <__aeabi_fmul+0x15e>
 8000b44:	ea80 0001 	eor.w	r0, r0, r1
 8000b48:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000b4c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b54:	4770      	bx	lr
 8000b56:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b5a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000b5e:	4770      	bx	lr

08000b60 <__aeabi_fdiv>:
 8000b60:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000b64:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000b68:	bf1e      	ittt	ne
 8000b6a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000b6e:	ea92 0f0c 	teqne	r2, ip
 8000b72:	ea93 0f0c 	teqne	r3, ip
 8000b76:	d069      	beq.n	8000c4c <__aeabi_fdiv+0xec>
 8000b78:	eba2 0203 	sub.w	r2, r2, r3
 8000b7c:	ea80 0c01 	eor.w	ip, r0, r1
 8000b80:	0249      	lsls	r1, r1, #9
 8000b82:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000b86:	d037      	beq.n	8000bf8 <__aeabi_fdiv+0x98>
 8000b88:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000b8c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000b90:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000b94:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000b98:	428b      	cmp	r3, r1
 8000b9a:	bf38      	it	cc
 8000b9c:	005b      	lslcc	r3, r3, #1
 8000b9e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000ba2:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000ba6:	428b      	cmp	r3, r1
 8000ba8:	bf24      	itt	cs
 8000baa:	1a5b      	subcs	r3, r3, r1
 8000bac:	ea40 000c 	orrcs.w	r0, r0, ip
 8000bb0:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000bb4:	bf24      	itt	cs
 8000bb6:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000bba:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000bbe:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000bc2:	bf24      	itt	cs
 8000bc4:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000bc8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000bcc:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000bd0:	bf24      	itt	cs
 8000bd2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000bd6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000bda:	011b      	lsls	r3, r3, #4
 8000bdc:	bf18      	it	ne
 8000bde:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000be2:	d1e0      	bne.n	8000ba6 <__aeabi_fdiv+0x46>
 8000be4:	2afd      	cmp	r2, #253	; 0xfd
 8000be6:	f63f af50 	bhi.w	8000a8a <__aeabi_fmul+0x92>
 8000bea:	428b      	cmp	r3, r1
 8000bec:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000bf0:	bf08      	it	eq
 8000bf2:	f020 0001 	biceq.w	r0, r0, #1
 8000bf6:	4770      	bx	lr
 8000bf8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000bfc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000c00:	327f      	adds	r2, #127	; 0x7f
 8000c02:	bfc2      	ittt	gt
 8000c04:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000c08:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000c0c:	4770      	bxgt	lr
 8000c0e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c12:	f04f 0300 	mov.w	r3, #0
 8000c16:	3a01      	subs	r2, #1
 8000c18:	e737      	b.n	8000a8a <__aeabi_fmul+0x92>
 8000c1a:	f092 0f00 	teq	r2, #0
 8000c1e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000c22:	bf02      	ittt	eq
 8000c24:	0040      	lsleq	r0, r0, #1
 8000c26:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000c2a:	3a01      	subeq	r2, #1
 8000c2c:	d0f9      	beq.n	8000c22 <__aeabi_fdiv+0xc2>
 8000c2e:	ea40 000c 	orr.w	r0, r0, ip
 8000c32:	f093 0f00 	teq	r3, #0
 8000c36:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c3a:	bf02      	ittt	eq
 8000c3c:	0049      	lsleq	r1, r1, #1
 8000c3e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000c42:	3b01      	subeq	r3, #1
 8000c44:	d0f9      	beq.n	8000c3a <__aeabi_fdiv+0xda>
 8000c46:	ea41 010c 	orr.w	r1, r1, ip
 8000c4a:	e795      	b.n	8000b78 <__aeabi_fdiv+0x18>
 8000c4c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000c50:	ea92 0f0c 	teq	r2, ip
 8000c54:	d108      	bne.n	8000c68 <__aeabi_fdiv+0x108>
 8000c56:	0242      	lsls	r2, r0, #9
 8000c58:	f47f af7d 	bne.w	8000b56 <__aeabi_fmul+0x15e>
 8000c5c:	ea93 0f0c 	teq	r3, ip
 8000c60:	f47f af70 	bne.w	8000b44 <__aeabi_fmul+0x14c>
 8000c64:	4608      	mov	r0, r1
 8000c66:	e776      	b.n	8000b56 <__aeabi_fmul+0x15e>
 8000c68:	ea93 0f0c 	teq	r3, ip
 8000c6c:	d104      	bne.n	8000c78 <__aeabi_fdiv+0x118>
 8000c6e:	024b      	lsls	r3, r1, #9
 8000c70:	f43f af4c 	beq.w	8000b0c <__aeabi_fmul+0x114>
 8000c74:	4608      	mov	r0, r1
 8000c76:	e76e      	b.n	8000b56 <__aeabi_fmul+0x15e>
 8000c78:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000c7c:	bf18      	it	ne
 8000c7e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000c82:	d1ca      	bne.n	8000c1a <__aeabi_fdiv+0xba>
 8000c84:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000c88:	f47f af5c 	bne.w	8000b44 <__aeabi_fmul+0x14c>
 8000c8c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000c90:	f47f af3c 	bne.w	8000b0c <__aeabi_fmul+0x114>
 8000c94:	e75f      	b.n	8000b56 <__aeabi_fmul+0x15e>
 8000c96:	bf00      	nop

08000c98 <RCC_voidSysClkInt>:
#include	"RCC_interface.h"
#include	"RCC_private.h"
#include	"RCC_config.h"

void		RCC_voidSysClkInt(void)
{
 8000c98:	b480      	push	{r7}
 8000c9a:	af00      	add	r7, sp, #0
	
	// SET Configurations
	RCC_CFGR = RCC_CFGR | SW;
 8000c9c:	4b20      	ldr	r3, [pc, #128]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000c9e:	681b      	ldr	r3, [r3, #0]
 8000ca0:	4a1f      	ldr	r2, [pc, #124]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000ca2:	f043 0302 	orr.w	r3, r3, #2
 8000ca6:	6013      	str	r3, [r2, #0]
	while (!((SW) == (RCC_CFGR & SW)));
 8000ca8:	bf00      	nop
 8000caa:	4b1d      	ldr	r3, [pc, #116]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cac:	681b      	ldr	r3, [r3, #0]
 8000cae:	f003 0302 	and.w	r3, r3, #2
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	d0f9      	beq.n	8000caa <RCC_voidSysClkInt+0x12>
	RCC_CFGR = RCC_CFGR | HPRE;
 8000cb6:	4b1a      	ldr	r3, [pc, #104]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cb8:	4a19      	ldr	r2, [pc, #100]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cba:	681b      	ldr	r3, [r3, #0]
 8000cbc:	6013      	str	r3, [r2, #0]
	RCC_CFGR = RCC_CFGR | PPRE1;
 8000cbe:	4b18      	ldr	r3, [pc, #96]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cc0:	4a17      	ldr	r2, [pc, #92]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cc2:	681b      	ldr	r3, [r3, #0]
 8000cc4:	6013      	str	r3, [r2, #0]
	RCC_CFGR = RCC_CFGR | PPRE2;
 8000cc6:	4b16      	ldr	r3, [pc, #88]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cc8:	4a15      	ldr	r2, [pc, #84]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cca:	681b      	ldr	r3, [r3, #0]
 8000ccc:	6013      	str	r3, [r2, #0]
	RCC_CFGR = RCC_CFGR | ADCPRE;
 8000cce:	4b14      	ldr	r3, [pc, #80]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cd0:	4a13      	ldr	r2, [pc, #76]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cd2:	681b      	ldr	r3, [r3, #0]
 8000cd4:	6013      	str	r3, [r2, #0]
    RCC_CFGR = RCC_CFGR | PLLSRC;
 8000cd6:	4b12      	ldr	r3, [pc, #72]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cd8:	4a11      	ldr	r2, [pc, #68]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cda:	681b      	ldr	r3, [r3, #0]
 8000cdc:	6013      	str	r3, [r2, #0]
    RCC_CFGR = RCC_CFGR | PLLXTPRE;
 8000cde:	4b10      	ldr	r3, [pc, #64]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	4a0f      	ldr	r2, [pc, #60]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000ce4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000ce8:	6013      	str	r3, [r2, #0]
    RCC_CFGR = RCC_CFGR | PLLMUL;
 8000cea:	4b0d      	ldr	r3, [pc, #52]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	4a0c      	ldr	r2, [pc, #48]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cf0:	f443 1360 	orr.w	r3, r3, #3670016	; 0x380000
 8000cf4:	6013      	str	r3, [r2, #0]
    RCC_CFGR = RCC_CFGR | USBPRE;
 8000cf6:	4b0a      	ldr	r3, [pc, #40]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cf8:	681b      	ldr	r3, [r3, #0]
 8000cfa:	4a09      	ldr	r2, [pc, #36]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000cfc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000d00:	6013      	str	r3, [r2, #0]
    RCC_CFGR = RCC_CFGR | MCO;
 8000d02:	4b07      	ldr	r3, [pc, #28]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000d04:	4a06      	ldr	r2, [pc, #24]	; (8000d20 <RCC_voidSysClkInt+0x88>)
 8000d06:	681b      	ldr	r3, [r3, #0]
 8000d08:	6013      	str	r3, [r2, #0]
	
	//Select Source of clock
#if (CLK_Sourc == RCC_HSI)
    SET_BIT(RCC_CR,HSION);
 8000d0a:	4b06      	ldr	r3, [pc, #24]	; (8000d24 <RCC_voidSysClkInt+0x8c>)
 8000d0c:	681b      	ldr	r3, [r3, #0]
 8000d0e:	4a05      	ldr	r2, [pc, #20]	; (8000d24 <RCC_voidSysClkInt+0x8c>)
 8000d10:	f043 0301 	orr.w	r3, r3, #1
 8000d14:	6013      	str	r3, [r2, #0]
	while(!HSIRDY);
 8000d16:	bf00      	nop
	SET_BIT(RCC_CR,PLLON);
	while(!PLLRDY);
#else
	#error "Wrong selection of RCC"
#endif
}
 8000d18:	bf00      	nop
 8000d1a:	46bd      	mov	sp, r7
 8000d1c:	bc80      	pop	{r7}
 8000d1e:	4770      	bx	lr
 8000d20:	40021004 	.word	0x40021004
 8000d24:	40021000 	.word	0x40021000

08000d28 <RCC_voidEnablePerClk>:

void		RCC_voidEnablePerClk(u8 BusId , u8 PerId)
{
 8000d28:	b480      	push	{r7}
 8000d2a:	b083      	sub	sp, #12
 8000d2c:	af00      	add	r7, sp, #0
 8000d2e:	4603      	mov	r3, r0
 8000d30:	460a      	mov	r2, r1
 8000d32:	71fb      	strb	r3, [r7, #7]
 8000d34:	4613      	mov	r3, r2
 8000d36:	71bb      	strb	r3, [r7, #6]
	/*		Range Check							*/
	if(PerId < 32)
 8000d38:	79bb      	ldrb	r3, [r7, #6]
 8000d3a:	2b1f      	cmp	r3, #31
 8000d3c:	d82a      	bhi.n	8000d94 <RCC_voidEnablePerClk+0x6c>
	{
		switch(BusId)
 8000d3e:	79fb      	ldrb	r3, [r7, #7]
 8000d40:	2b02      	cmp	r3, #2
 8000d42:	d01c      	beq.n	8000d7e <RCC_voidEnablePerClk+0x56>
 8000d44:	2b02      	cmp	r3, #2
 8000d46:	dc25      	bgt.n	8000d94 <RCC_voidEnablePerClk+0x6c>
 8000d48:	2b00      	cmp	r3, #0
 8000d4a:	d002      	beq.n	8000d52 <RCC_voidEnablePerClk+0x2a>
 8000d4c:	2b01      	cmp	r3, #1
 8000d4e:	d00b      	beq.n	8000d68 <RCC_voidEnablePerClk+0x40>
		}
		
	}
	else{	/*	Return Error "Out Of The Range"		*/	}
	
}
 8000d50:	e020      	b.n	8000d94 <RCC_voidEnablePerClk+0x6c>
			case	RCC_AHB		:	SET_BIT(RCC_AHBENR,PerId) ;	break;
 8000d52:	4b13      	ldr	r3, [pc, #76]	; (8000da0 <RCC_voidEnablePerClk+0x78>)
 8000d54:	681b      	ldr	r3, [r3, #0]
 8000d56:	79ba      	ldrb	r2, [r7, #6]
 8000d58:	2101      	movs	r1, #1
 8000d5a:	fa01 f202 	lsl.w	r2, r1, r2
 8000d5e:	4611      	mov	r1, r2
 8000d60:	4a0f      	ldr	r2, [pc, #60]	; (8000da0 <RCC_voidEnablePerClk+0x78>)
 8000d62:	430b      	orrs	r3, r1
 8000d64:	6013      	str	r3, [r2, #0]
 8000d66:	e015      	b.n	8000d94 <RCC_voidEnablePerClk+0x6c>
			case	RCC_APB1	:	SET_BIT(RCC_APB1ENR,PerId);	break;
 8000d68:	4b0e      	ldr	r3, [pc, #56]	; (8000da4 <RCC_voidEnablePerClk+0x7c>)
 8000d6a:	681b      	ldr	r3, [r3, #0]
 8000d6c:	79ba      	ldrb	r2, [r7, #6]
 8000d6e:	2101      	movs	r1, #1
 8000d70:	fa01 f202 	lsl.w	r2, r1, r2
 8000d74:	4611      	mov	r1, r2
 8000d76:	4a0b      	ldr	r2, [pc, #44]	; (8000da4 <RCC_voidEnablePerClk+0x7c>)
 8000d78:	430b      	orrs	r3, r1
 8000d7a:	6013      	str	r3, [r2, #0]
 8000d7c:	e00a      	b.n	8000d94 <RCC_voidEnablePerClk+0x6c>
			case	RCC_APB2	:	SET_BIT(RCC_APB2ENR,PerId);	break;
 8000d7e:	4b0a      	ldr	r3, [pc, #40]	; (8000da8 <RCC_voidEnablePerClk+0x80>)
 8000d80:	681b      	ldr	r3, [r3, #0]
 8000d82:	79ba      	ldrb	r2, [r7, #6]
 8000d84:	2101      	movs	r1, #1
 8000d86:	fa01 f202 	lsl.w	r2, r1, r2
 8000d8a:	4611      	mov	r1, r2
 8000d8c:	4a06      	ldr	r2, [pc, #24]	; (8000da8 <RCC_voidEnablePerClk+0x80>)
 8000d8e:	430b      	orrs	r3, r1
 8000d90:	6013      	str	r3, [r2, #0]
 8000d92:	bf00      	nop
}
 8000d94:	bf00      	nop
 8000d96:	370c      	adds	r7, #12
 8000d98:	46bd      	mov	sp, r7
 8000d9a:	bc80      	pop	{r7}
 8000d9c:	4770      	bx	lr
 8000d9e:	bf00      	nop
 8000da0:	40021014 	.word	0x40021014
 8000da4:	4002101c 	.word	0x4002101c
 8000da8:	40021018 	.word	0x40021018

08000dac <DIO_voidSetPinDirection>:




void	DIO_voidSetPinDirection(u8 port, u8 PIN, u8 Direction)
{
 8000dac:	b480      	push	{r7}
 8000dae:	b083      	sub	sp, #12
 8000db0:	af00      	add	r7, sp, #0
 8000db2:	4603      	mov	r3, r0
 8000db4:	71fb      	strb	r3, [r7, #7]
 8000db6:	460b      	mov	r3, r1
 8000db8:	71bb      	strb	r3, [r7, #6]
 8000dba:	4613      	mov	r3, r2
 8000dbc:	717b      	strb	r3, [r7, #5]
	/*		Range Check 		*/
	if(port < 3 && PIN < 16)
 8000dbe:	79fb      	ldrb	r3, [r7, #7]
 8000dc0:	2b02      	cmp	r3, #2
 8000dc2:	f200 80b3 	bhi.w	8000f2c <DIO_voidSetPinDirection+0x180>
 8000dc6:	79bb      	ldrb	r3, [r7, #6]
 8000dc8:	2b0f      	cmp	r3, #15
 8000dca:	f200 80af 	bhi.w	8000f2c <DIO_voidSetPinDirection+0x180>
	{
		if(PIN<8)	/*		Low	(PIN0:PIN7) CRL	*/
 8000dce:	79bb      	ldrb	r3, [r7, #6]
 8000dd0:	2b07      	cmp	r3, #7
 8000dd2:	d852      	bhi.n	8000e7a <DIO_voidSetPinDirection+0xce>
		{
			switch(port)
 8000dd4:	79fb      	ldrb	r3, [r7, #7]
 8000dd6:	2b02      	cmp	r3, #2
 8000dd8:	d037      	beq.n	8000e4a <DIO_voidSetPinDirection+0x9e>
 8000dda:	2b02      	cmp	r3, #2
 8000ddc:	f300 80a6 	bgt.w	8000f2c <DIO_voidSetPinDirection+0x180>
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	d002      	beq.n	8000dea <DIO_voidSetPinDirection+0x3e>
 8000de4:	2b01      	cmp	r3, #1
 8000de6:	d018      	beq.n	8000e1a <DIO_voidSetPinDirection+0x6e>
				break;
			}

		}
	}else{/*	Return Error	*/}
}
 8000de8:	e0a0      	b.n	8000f2c <DIO_voidSetPinDirection+0x180>
				GPIOA_CRL &= ~((0b1111)<<(PIN * 4));
 8000dea:	4b53      	ldr	r3, [pc, #332]	; (8000f38 <DIO_voidSetPinDirection+0x18c>)
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	79ba      	ldrb	r2, [r7, #6]
 8000df0:	0092      	lsls	r2, r2, #2
 8000df2:	210f      	movs	r1, #15
 8000df4:	fa01 f202 	lsl.w	r2, r1, r2
 8000df8:	43d2      	mvns	r2, r2
 8000dfa:	4611      	mov	r1, r2
 8000dfc:	4a4e      	ldr	r2, [pc, #312]	; (8000f38 <DIO_voidSetPinDirection+0x18c>)
 8000dfe:	400b      	ands	r3, r1
 8000e00:	6013      	str	r3, [r2, #0]
				GPIOA_CRL |=  ((Direction)<<(PIN * 4));
 8000e02:	4b4d      	ldr	r3, [pc, #308]	; (8000f38 <DIO_voidSetPinDirection+0x18c>)
 8000e04:	681b      	ldr	r3, [r3, #0]
 8000e06:	7979      	ldrb	r1, [r7, #5]
 8000e08:	79ba      	ldrb	r2, [r7, #6]
 8000e0a:	0092      	lsls	r2, r2, #2
 8000e0c:	fa01 f202 	lsl.w	r2, r1, r2
 8000e10:	4611      	mov	r1, r2
 8000e12:	4a49      	ldr	r2, [pc, #292]	; (8000f38 <DIO_voidSetPinDirection+0x18c>)
 8000e14:	430b      	orrs	r3, r1
 8000e16:	6013      	str	r3, [r2, #0]
				break;
 8000e18:	e088      	b.n	8000f2c <DIO_voidSetPinDirection+0x180>
				GPIOB_CRL &= ~((0b1111)<<(PIN * 4));
 8000e1a:	4b48      	ldr	r3, [pc, #288]	; (8000f3c <DIO_voidSetPinDirection+0x190>)
 8000e1c:	681b      	ldr	r3, [r3, #0]
 8000e1e:	79ba      	ldrb	r2, [r7, #6]
 8000e20:	0092      	lsls	r2, r2, #2
 8000e22:	210f      	movs	r1, #15
 8000e24:	fa01 f202 	lsl.w	r2, r1, r2
 8000e28:	43d2      	mvns	r2, r2
 8000e2a:	4611      	mov	r1, r2
 8000e2c:	4a43      	ldr	r2, [pc, #268]	; (8000f3c <DIO_voidSetPinDirection+0x190>)
 8000e2e:	400b      	ands	r3, r1
 8000e30:	6013      	str	r3, [r2, #0]
				GPIOB_CRL |=  ((Direction)<<(PIN * 4));
 8000e32:	4b42      	ldr	r3, [pc, #264]	; (8000f3c <DIO_voidSetPinDirection+0x190>)
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	7979      	ldrb	r1, [r7, #5]
 8000e38:	79ba      	ldrb	r2, [r7, #6]
 8000e3a:	0092      	lsls	r2, r2, #2
 8000e3c:	fa01 f202 	lsl.w	r2, r1, r2
 8000e40:	4611      	mov	r1, r2
 8000e42:	4a3e      	ldr	r2, [pc, #248]	; (8000f3c <DIO_voidSetPinDirection+0x190>)
 8000e44:	430b      	orrs	r3, r1
 8000e46:	6013      	str	r3, [r2, #0]
				break;
 8000e48:	e070      	b.n	8000f2c <DIO_voidSetPinDirection+0x180>
				GPIOC_CRL &= ~((0b1111)<<(PIN * 4));
 8000e4a:	4b3d      	ldr	r3, [pc, #244]	; (8000f40 <DIO_voidSetPinDirection+0x194>)
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	79ba      	ldrb	r2, [r7, #6]
 8000e50:	0092      	lsls	r2, r2, #2
 8000e52:	210f      	movs	r1, #15
 8000e54:	fa01 f202 	lsl.w	r2, r1, r2
 8000e58:	43d2      	mvns	r2, r2
 8000e5a:	4611      	mov	r1, r2
 8000e5c:	4a38      	ldr	r2, [pc, #224]	; (8000f40 <DIO_voidSetPinDirection+0x194>)
 8000e5e:	400b      	ands	r3, r1
 8000e60:	6013      	str	r3, [r2, #0]
				GPIOC_CRL |=  ((Direction)<<(PIN * 4));
 8000e62:	4b37      	ldr	r3, [pc, #220]	; (8000f40 <DIO_voidSetPinDirection+0x194>)
 8000e64:	681b      	ldr	r3, [r3, #0]
 8000e66:	7979      	ldrb	r1, [r7, #5]
 8000e68:	79ba      	ldrb	r2, [r7, #6]
 8000e6a:	0092      	lsls	r2, r2, #2
 8000e6c:	fa01 f202 	lsl.w	r2, r1, r2
 8000e70:	4611      	mov	r1, r2
 8000e72:	4a33      	ldr	r2, [pc, #204]	; (8000f40 <DIO_voidSetPinDirection+0x194>)
 8000e74:	430b      	orrs	r3, r1
 8000e76:	6013      	str	r3, [r2, #0]
				break;
 8000e78:	e058      	b.n	8000f2c <DIO_voidSetPinDirection+0x180>
		}else if(PIN<16)	/*		Low	(PIN8:PIN15) CRL	*/
 8000e7a:	79bb      	ldrb	r3, [r7, #6]
 8000e7c:	2b0f      	cmp	r3, #15
 8000e7e:	d854      	bhi.n	8000f2a <DIO_voidSetPinDirection+0x17e>
			PIN -= 8;
 8000e80:	79bb      	ldrb	r3, [r7, #6]
 8000e82:	3b08      	subs	r3, #8
 8000e84:	71bb      	strb	r3, [r7, #6]
			switch(port)
 8000e86:	79fb      	ldrb	r3, [r7, #7]
 8000e88:	2b02      	cmp	r3, #2
 8000e8a:	d036      	beq.n	8000efa <DIO_voidSetPinDirection+0x14e>
 8000e8c:	2b02      	cmp	r3, #2
 8000e8e:	dc4d      	bgt.n	8000f2c <DIO_voidSetPinDirection+0x180>
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	d002      	beq.n	8000e9a <DIO_voidSetPinDirection+0xee>
 8000e94:	2b01      	cmp	r3, #1
 8000e96:	d018      	beq.n	8000eca <DIO_voidSetPinDirection+0x11e>
}
 8000e98:	e048      	b.n	8000f2c <DIO_voidSetPinDirection+0x180>
				GPIOA_CRH &= ~((0b1111)<<(PIN * 4));
 8000e9a:	4b2a      	ldr	r3, [pc, #168]	; (8000f44 <DIO_voidSetPinDirection+0x198>)
 8000e9c:	681b      	ldr	r3, [r3, #0]
 8000e9e:	79ba      	ldrb	r2, [r7, #6]
 8000ea0:	0092      	lsls	r2, r2, #2
 8000ea2:	210f      	movs	r1, #15
 8000ea4:	fa01 f202 	lsl.w	r2, r1, r2
 8000ea8:	43d2      	mvns	r2, r2
 8000eaa:	4611      	mov	r1, r2
 8000eac:	4a25      	ldr	r2, [pc, #148]	; (8000f44 <DIO_voidSetPinDirection+0x198>)
 8000eae:	400b      	ands	r3, r1
 8000eb0:	6013      	str	r3, [r2, #0]
				GPIOA_CRH |=  ((Direction)<<(PIN * 4));
 8000eb2:	4b24      	ldr	r3, [pc, #144]	; (8000f44 <DIO_voidSetPinDirection+0x198>)
 8000eb4:	681b      	ldr	r3, [r3, #0]
 8000eb6:	7979      	ldrb	r1, [r7, #5]
 8000eb8:	79ba      	ldrb	r2, [r7, #6]
 8000eba:	0092      	lsls	r2, r2, #2
 8000ebc:	fa01 f202 	lsl.w	r2, r1, r2
 8000ec0:	4611      	mov	r1, r2
 8000ec2:	4a20      	ldr	r2, [pc, #128]	; (8000f44 <DIO_voidSetPinDirection+0x198>)
 8000ec4:	430b      	orrs	r3, r1
 8000ec6:	6013      	str	r3, [r2, #0]
				break;
 8000ec8:	e030      	b.n	8000f2c <DIO_voidSetPinDirection+0x180>
				GPIOB_CRH &= ~((0b1111)<<(PIN * 4));
 8000eca:	4b1f      	ldr	r3, [pc, #124]	; (8000f48 <DIO_voidSetPinDirection+0x19c>)
 8000ecc:	681b      	ldr	r3, [r3, #0]
 8000ece:	79ba      	ldrb	r2, [r7, #6]
 8000ed0:	0092      	lsls	r2, r2, #2
 8000ed2:	210f      	movs	r1, #15
 8000ed4:	fa01 f202 	lsl.w	r2, r1, r2
 8000ed8:	43d2      	mvns	r2, r2
 8000eda:	4611      	mov	r1, r2
 8000edc:	4a1a      	ldr	r2, [pc, #104]	; (8000f48 <DIO_voidSetPinDirection+0x19c>)
 8000ede:	400b      	ands	r3, r1
 8000ee0:	6013      	str	r3, [r2, #0]
				GPIOB_CRH |=  ((Direction)<<(PIN * 4));
 8000ee2:	4b19      	ldr	r3, [pc, #100]	; (8000f48 <DIO_voidSetPinDirection+0x19c>)
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	7979      	ldrb	r1, [r7, #5]
 8000ee8:	79ba      	ldrb	r2, [r7, #6]
 8000eea:	0092      	lsls	r2, r2, #2
 8000eec:	fa01 f202 	lsl.w	r2, r1, r2
 8000ef0:	4611      	mov	r1, r2
 8000ef2:	4a15      	ldr	r2, [pc, #84]	; (8000f48 <DIO_voidSetPinDirection+0x19c>)
 8000ef4:	430b      	orrs	r3, r1
 8000ef6:	6013      	str	r3, [r2, #0]
				break;
 8000ef8:	e018      	b.n	8000f2c <DIO_voidSetPinDirection+0x180>
				GPIOC_CRH &= ~((0b1111)<<(PIN * 4));
 8000efa:	4b14      	ldr	r3, [pc, #80]	; (8000f4c <DIO_voidSetPinDirection+0x1a0>)
 8000efc:	681b      	ldr	r3, [r3, #0]
 8000efe:	79ba      	ldrb	r2, [r7, #6]
 8000f00:	0092      	lsls	r2, r2, #2
 8000f02:	210f      	movs	r1, #15
 8000f04:	fa01 f202 	lsl.w	r2, r1, r2
 8000f08:	43d2      	mvns	r2, r2
 8000f0a:	4611      	mov	r1, r2
 8000f0c:	4a0f      	ldr	r2, [pc, #60]	; (8000f4c <DIO_voidSetPinDirection+0x1a0>)
 8000f0e:	400b      	ands	r3, r1
 8000f10:	6013      	str	r3, [r2, #0]
				GPIOC_CRH |=  ((Direction)<<(PIN * 4));
 8000f12:	4b0e      	ldr	r3, [pc, #56]	; (8000f4c <DIO_voidSetPinDirection+0x1a0>)
 8000f14:	681b      	ldr	r3, [r3, #0]
 8000f16:	7979      	ldrb	r1, [r7, #5]
 8000f18:	79ba      	ldrb	r2, [r7, #6]
 8000f1a:	0092      	lsls	r2, r2, #2
 8000f1c:	fa01 f202 	lsl.w	r2, r1, r2
 8000f20:	4611      	mov	r1, r2
 8000f22:	4a0a      	ldr	r2, [pc, #40]	; (8000f4c <DIO_voidSetPinDirection+0x1a0>)
 8000f24:	430b      	orrs	r3, r1
 8000f26:	6013      	str	r3, [r2, #0]
				break;
 8000f28:	e000      	b.n	8000f2c <DIO_voidSetPinDirection+0x180>
		}
 8000f2a:	bf00      	nop
}
 8000f2c:	bf00      	nop
 8000f2e:	370c      	adds	r7, #12
 8000f30:	46bd      	mov	sp, r7
 8000f32:	bc80      	pop	{r7}
 8000f34:	4770      	bx	lr
 8000f36:	bf00      	nop
 8000f38:	40010800 	.word	0x40010800
 8000f3c:	40010c00 	.word	0x40010c00
 8000f40:	40011000 	.word	0x40011000
 8000f44:	40010804 	.word	0x40010804
 8000f48:	40010c04 	.word	0x40010c04
 8000f4c:	40011004 	.word	0x40011004

08000f50 <DIO_voidTogPinValue>:
}



void	DIO_voidTogPinValue(u8 port, u8 pin)
{
 8000f50:	b480      	push	{r7}
 8000f52:	b083      	sub	sp, #12
 8000f54:	af00      	add	r7, sp, #0
 8000f56:	4603      	mov	r3, r0
 8000f58:	460a      	mov	r2, r1
 8000f5a:	71fb      	strb	r3, [r7, #7]
 8000f5c:	4613      	mov	r3, r2
 8000f5e:	71bb      	strb	r3, [r7, #6]
	/*		Range Check 		*/
	if(port < 3 && pin < 16)
 8000f60:	79fb      	ldrb	r3, [r7, #7]
 8000f62:	2b02      	cmp	r3, #2
 8000f64:	d82d      	bhi.n	8000fc2 <DIO_voidTogPinValue+0x72>
 8000f66:	79bb      	ldrb	r3, [r7, #6]
 8000f68:	2b0f      	cmp	r3, #15
 8000f6a:	d82a      	bhi.n	8000fc2 <DIO_voidTogPinValue+0x72>
	{
		switch(port)
 8000f6c:	79fb      	ldrb	r3, [r7, #7]
 8000f6e:	2b02      	cmp	r3, #2
 8000f70:	d01c      	beq.n	8000fac <DIO_voidTogPinValue+0x5c>
 8000f72:	2b02      	cmp	r3, #2
 8000f74:	dc26      	bgt.n	8000fc4 <DIO_voidTogPinValue+0x74>
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d002      	beq.n	8000f80 <DIO_voidTogPinValue+0x30>
 8000f7a:	2b01      	cmp	r3, #1
 8000f7c:	d00b      	beq.n	8000f96 <DIO_voidTogPinValue+0x46>
		case	PORTA	:	TOG_BIT(GPIOA_ODR,pin);	break;
		case	PORTB	:	TOG_BIT(GPIOB_ODR,pin);	break;
		case	PORTC	:	TOG_BIT(GPIOC_ODR,pin);	break;
		}
	}
}
 8000f7e:	e021      	b.n	8000fc4 <DIO_voidTogPinValue+0x74>
		case	PORTA	:	TOG_BIT(GPIOA_ODR,pin);	break;
 8000f80:	4b13      	ldr	r3, [pc, #76]	; (8000fd0 <DIO_voidTogPinValue+0x80>)
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	79ba      	ldrb	r2, [r7, #6]
 8000f86:	2101      	movs	r1, #1
 8000f88:	fa01 f202 	lsl.w	r2, r1, r2
 8000f8c:	4611      	mov	r1, r2
 8000f8e:	4a10      	ldr	r2, [pc, #64]	; (8000fd0 <DIO_voidTogPinValue+0x80>)
 8000f90:	404b      	eors	r3, r1
 8000f92:	6013      	str	r3, [r2, #0]
 8000f94:	e016      	b.n	8000fc4 <DIO_voidTogPinValue+0x74>
		case	PORTB	:	TOG_BIT(GPIOB_ODR,pin);	break;
 8000f96:	4b0f      	ldr	r3, [pc, #60]	; (8000fd4 <DIO_voidTogPinValue+0x84>)
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	79ba      	ldrb	r2, [r7, #6]
 8000f9c:	2101      	movs	r1, #1
 8000f9e:	fa01 f202 	lsl.w	r2, r1, r2
 8000fa2:	4611      	mov	r1, r2
 8000fa4:	4a0b      	ldr	r2, [pc, #44]	; (8000fd4 <DIO_voidTogPinValue+0x84>)
 8000fa6:	404b      	eors	r3, r1
 8000fa8:	6013      	str	r3, [r2, #0]
 8000faa:	e00b      	b.n	8000fc4 <DIO_voidTogPinValue+0x74>
		case	PORTC	:	TOG_BIT(GPIOC_ODR,pin);	break;
 8000fac:	4b0a      	ldr	r3, [pc, #40]	; (8000fd8 <DIO_voidTogPinValue+0x88>)
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	79ba      	ldrb	r2, [r7, #6]
 8000fb2:	2101      	movs	r1, #1
 8000fb4:	fa01 f202 	lsl.w	r2, r1, r2
 8000fb8:	4611      	mov	r1, r2
 8000fba:	4a07      	ldr	r2, [pc, #28]	; (8000fd8 <DIO_voidTogPinValue+0x88>)
 8000fbc:	404b      	eors	r3, r1
 8000fbe:	6013      	str	r3, [r2, #0]
 8000fc0:	e000      	b.n	8000fc4 <DIO_voidTogPinValue+0x74>
	}
 8000fc2:	bf00      	nop
}
 8000fc4:	bf00      	nop
 8000fc6:	370c      	adds	r7, #12
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	bc80      	pop	{r7}
 8000fcc:	4770      	bx	lr
 8000fce:	bf00      	nop
 8000fd0:	4001080c 	.word	0x4001080c
 8000fd4:	40010c0c 	.word	0x40010c0c
 8000fd8:	4001100c 	.word	0x4001100c

08000fdc <EXTI0_IRQHandler>:
		Fptr = EXTI0_CallBack;
	}
}

void	EXTI0_IRQHandler(void)
{
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	af00      	add	r7, sp, #0
	SET_BIT(EXTI->PR,0);
 8000fe0:	4b07      	ldr	r3, [pc, #28]	; (8001000 <EXTI0_IRQHandler+0x24>)
 8000fe2:	695b      	ldr	r3, [r3, #20]
 8000fe4:	4a06      	ldr	r2, [pc, #24]	; (8001000 <EXTI0_IRQHandler+0x24>)
 8000fe6:	f043 0301 	orr.w	r3, r3, #1
 8000fea:	6153      	str	r3, [r2, #20]
	DIO_voidTogPinValue(PORTA, PIN5);
 8000fec:	2105      	movs	r1, #5
 8000fee:	2000      	movs	r0, #0
 8000ff0:	f7ff ffae 	bl	8000f50 <DIO_voidTogPinValue>
	_delay_ms(25);
 8000ff4:	2019      	movs	r0, #25
 8000ff6:	f000 f805 	bl	8001004 <_delay_ms>
	/*	Clear the Flag			*/
}
 8000ffa:	bf00      	nop
 8000ffc:	bd80      	pop	{r7, pc}
 8000ffe:	bf00      	nop
 8001000:	40010400 	.word	0x40010400

08001004 <_delay_ms>:
#include "Bit_Math.h"
#include "Std_Types.h"


void	_delay_ms(u32 ticks)
{
 8001004:	b480      	push	{r7}
 8001006:	b085      	sub	sp, #20
 8001008:	af00      	add	r7, sp, #0
 800100a:	6078      	str	r0, [r7, #4]
	u32 i;
	for( i = 0; i < (ticks * 500) ; i++)
 800100c:	2300      	movs	r3, #0
 800100e:	60fb      	str	r3, [r7, #12]
 8001010:	e003      	b.n	800101a <_delay_ms+0x16>
	{
		asm("NOP");
 8001012:	bf00      	nop
	for( i = 0; i < (ticks * 500) ; i++)
 8001014:	68fb      	ldr	r3, [r7, #12]
 8001016:	3301      	adds	r3, #1
 8001018:	60fb      	str	r3, [r7, #12]
 800101a:	687b      	ldr	r3, [r7, #4]
 800101c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8001020:	fb02 f303 	mul.w	r3, r2, r3
 8001024:	68fa      	ldr	r2, [r7, #12]
 8001026:	429a      	cmp	r2, r3
 8001028:	d3f3      	bcc.n	8001012 <_delay_ms+0xe>
	}
}
 800102a:	bf00      	nop
 800102c:	bf00      	nop
 800102e:	3714      	adds	r7, #20
 8001030:	46bd      	mov	sp, r7
 8001032:	bc80      	pop	{r7}
 8001034:	4770      	bx	lr
	...

08001038 <ADC_voidInit>:




void ADC_voidInit(void)
{
 8001038:	b580      	push	{r7, lr}
 800103a:	af00      	add	r7, sp, #0
	// Enable ADC
	ADC1 -> CR2 |= 1 << ADON;
 800103c:	4b12      	ldr	r3, [pc, #72]	; (8001088 <ADC_voidInit+0x50>)
 800103e:	689b      	ldr	r3, [r3, #8]
 8001040:	4a11      	ldr	r2, [pc, #68]	; (8001088 <ADC_voidInit+0x50>)
 8001042:	f043 0301 	orr.w	r3, r3, #1
 8001046:	6093      	str	r3, [r2, #8]
	_delay_ms(20);
 8001048:	2014      	movs	r0, #20
 800104a:	f7ff ffdb 	bl	8001004 <_delay_ms>
	// single convertion
	//DATA Right
	//Event trigger for software
	ADC1 -> CR2 |= 0b111 << EXTSEL;
 800104e:	4b0e      	ldr	r3, [pc, #56]	; (8001088 <ADC_voidInit+0x50>)
 8001050:	689b      	ldr	r3, [r3, #8]
 8001052:	4a0d      	ldr	r2, [pc, #52]	; (8001088 <ADC_voidInit+0x50>)
 8001054:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 8001058:	6093      	str	r3, [r2, #8]

	ADC1 -> CR2 |= 1 << EXTTRIG;
 800105a:	4b0b      	ldr	r3, [pc, #44]	; (8001088 <ADC_voidInit+0x50>)
 800105c:	689b      	ldr	r3, [r3, #8]
 800105e:	4a0a      	ldr	r2, [pc, #40]	; (8001088 <ADC_voidInit+0x50>)
 8001060:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001064:	6093      	str	r3, [r2, #8]

	//AD Cal
	ADC1 -> CR2 |= 1 << 2;
 8001066:	4b08      	ldr	r3, [pc, #32]	; (8001088 <ADC_voidInit+0x50>)
 8001068:	689b      	ldr	r3, [r3, #8]
 800106a:	4a07      	ldr	r2, [pc, #28]	; (8001088 <ADC_voidInit+0x50>)
 800106c:	f043 0304 	orr.w	r3, r3, #4
 8001070:	6093      	str	r3, [r2, #8]
	while (GET_BIT(ADC1 -> CR2 , 2));
 8001072:	bf00      	nop
 8001074:	4b04      	ldr	r3, [pc, #16]	; (8001088 <ADC_voidInit+0x50>)
 8001076:	689b      	ldr	r3, [r3, #8]
 8001078:	089b      	lsrs	r3, r3, #2
 800107a:	f003 0301 	and.w	r3, r3, #1
 800107e:	2b00      	cmp	r3, #0
 8001080:	d1f8      	bne.n	8001074 <ADC_voidInit+0x3c>



}
 8001082:	bf00      	nop
 8001084:	bf00      	nop
 8001086:	bd80      	pop	{r7, pc}
 8001088:	40012400 	.word	0x40012400

0800108c <ADC_u16_read>:

u32   ADC_u16_read(u32 channed)
{
 800108c:	b480      	push	{r7}
 800108e:	b085      	sub	sp, #20
 8001090:	af00      	add	r7, sp, #0
 8001092:	6078      	str	r0, [r7, #4]
 u32 Local_u32Reading;   //	ADC->DR &= 0x00000000;
// Set Channel
	if(channed <= CHANNEL_9)
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	2b09      	cmp	r3, #9
 8001098:	d81d      	bhi.n	80010d6 <ADC_u16_read+0x4a>
	{
		CLR_BIT(ADC1->SQR3 , 0);
 800109a:	4b1a      	ldr	r3, [pc, #104]	; (8001104 <ADC_u16_read+0x78>)
 800109c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800109e:	4a19      	ldr	r2, [pc, #100]	; (8001104 <ADC_u16_read+0x78>)
 80010a0:	f023 0301 	bic.w	r3, r3, #1
 80010a4:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC1->SQR3 , 1);
 80010a6:	4b17      	ldr	r3, [pc, #92]	; (8001104 <ADC_u16_read+0x78>)
 80010a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010aa:	4a16      	ldr	r2, [pc, #88]	; (8001104 <ADC_u16_read+0x78>)
 80010ac:	f023 0302 	bic.w	r3, r3, #2
 80010b0:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC1->SQR3 , 2);
 80010b2:	4b14      	ldr	r3, [pc, #80]	; (8001104 <ADC_u16_read+0x78>)
 80010b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010b6:	4a13      	ldr	r2, [pc, #76]	; (8001104 <ADC_u16_read+0x78>)
 80010b8:	f023 0304 	bic.w	r3, r3, #4
 80010bc:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC1->SQR3 , 3);
 80010be:	4b11      	ldr	r3, [pc, #68]	; (8001104 <ADC_u16_read+0x78>)
 80010c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010c2:	4a10      	ldr	r2, [pc, #64]	; (8001104 <ADC_u16_read+0x78>)
 80010c4:	f023 0308 	bic.w	r3, r3, #8
 80010c8:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC1->SQR3 , 4);
 80010ca:	4b0e      	ldr	r3, [pc, #56]	; (8001104 <ADC_u16_read+0x78>)
 80010cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010ce:	4a0d      	ldr	r2, [pc, #52]	; (8001104 <ADC_u16_read+0x78>)
 80010d0:	f023 0310 	bic.w	r3, r3, #16
 80010d4:	6353      	str	r3, [r2, #52]	; 0x34
	}

	ADC1 -> CR2 |= 1 << 22;
 80010d6:	4b0b      	ldr	r3, [pc, #44]	; (8001104 <ADC_u16_read+0x78>)
 80010d8:	689b      	ldr	r3, [r3, #8]
 80010da:	4a0a      	ldr	r2, [pc, #40]	; (8001104 <ADC_u16_read+0x78>)
 80010dc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80010e0:	6093      	str	r3, [r2, #8]

	while (!GET_BIT(ADC1 ->SR, EOC));
 80010e2:	bf00      	nop
 80010e4:	4b07      	ldr	r3, [pc, #28]	; (8001104 <ADC_u16_read+0x78>)
 80010e6:	681b      	ldr	r3, [r3, #0]
 80010e8:	085b      	lsrs	r3, r3, #1
 80010ea:	f003 0301 	and.w	r3, r3, #1
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d0f8      	beq.n	80010e4 <ADC_u16_read+0x58>

	Local_u32Reading = ADC1 ->DR;
 80010f2:	4b04      	ldr	r3, [pc, #16]	; (8001104 <ADC_u16_read+0x78>)
 80010f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80010f6:	60fb      	str	r3, [r7, #12]
	return Local_u32Reading;
 80010f8:	68fb      	ldr	r3, [r7, #12]
}
 80010fa:	4618      	mov	r0, r3
 80010fc:	3714      	adds	r7, #20
 80010fe:	46bd      	mov	sp, r7
 8001100:	bc80      	pop	{r7}
 8001102:	4770      	bx	lr
 8001104:	40012400 	.word	0x40012400

08001108 <main>:
#include    "LED_interface.h"
#include    "BUZZER_interface.h"
#include    "ADC_interface.h"

int main (void)
{
 8001108:	b580      	push	{r7, lr}
 800110a:	b082      	sub	sp, #8
 800110c:	af00      	add	r7, sp, #0
	RCC_voidSysClkInt();
 800110e:	f7ff fdc3 	bl	8000c98 <RCC_voidSysClkInt>
	RCC_voidEnablePerClk(RCC_APB2, 2);
 8001112:	2102      	movs	r1, #2
 8001114:	2002      	movs	r0, #2
 8001116:	f7ff fe07 	bl	8000d28 <RCC_voidEnablePerClk>
	RCC_voidEnablePerClk(RCC_APB2, 9);
 800111a:	2109      	movs	r1, #9
 800111c:	2002      	movs	r0, #2
 800111e:	f7ff fe03 	bl	8000d28 <RCC_voidEnablePerClk>
	DIO_voidSetPinDirection(PORTA, PIN0, GPIO_INPUT_ANALOG);
 8001122:	2200      	movs	r2, #0
 8001124:	2100      	movs	r1, #0
 8001126:	2000      	movs	r0, #0
 8001128:	f7ff fe40 	bl	8000dac <DIO_voidSetPinDirection>
	ADC_voidInit();
 800112c:	f7ff ff84 	bl	8001038 <ADC_voidInit>
	u16 volatile read = 0;
 8001130:	2300      	movs	r3, #0
 8001132:	807b      	strh	r3, [r7, #2]
	while (1)
	{
		read = ADC_u16_read(CHANNEL_0);
 8001134:	2000      	movs	r0, #0
 8001136:	f7ff ffa9 	bl	800108c <ADC_u16_read>
 800113a:	4603      	mov	r3, r0
 800113c:	b29b      	uxth	r3, r3
 800113e:	807b      	strh	r3, [r7, #2]
		f32 x = (f32)read/4096*3.3;
 8001140:	887b      	ldrh	r3, [r7, #2]
 8001142:	b29b      	uxth	r3, r3
 8001144:	4618      	mov	r0, r3
 8001146:	f7ff fbff 	bl	8000948 <__aeabi_ui2f>
 800114a:	4603      	mov	r3, r0
 800114c:	f04f 418b 	mov.w	r1, #1166016512	; 0x45800000
 8001150:	4618      	mov	r0, r3
 8001152:	f7ff fd05 	bl	8000b60 <__aeabi_fdiv>
 8001156:	4603      	mov	r3, r0
 8001158:	4618      	mov	r0, r3
 800115a:	f7ff fa97 	bl	800068c <__aeabi_f2d>
 800115e:	a308      	add	r3, pc, #32	; (adr r3, 8001180 <main+0x78>)
 8001160:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001164:	f7ff f804 	bl	8000170 <__aeabi_dmul>
 8001168:	4602      	mov	r2, r0
 800116a:	460b      	mov	r3, r1
 800116c:	4610      	mov	r0, r2
 800116e:	4619      	mov	r1, r3
 8001170:	f7ff fae4 	bl	800073c <__aeabi_d2f>
 8001174:	4603      	mov	r3, r0
 8001176:	607b      	str	r3, [r7, #4]
		asm("NOP");
 8001178:	bf00      	nop
	{
 800117a:	e7db      	b.n	8001134 <main+0x2c>
 800117c:	f3af 8000 	nop.w
 8001180:	66666666 	.word	0x66666666
 8001184:	400a6666 	.word	0x400a6666

08001188 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001188:	480d      	ldr	r0, [pc, #52]	; (80011c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800118a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800118c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001190:	480c      	ldr	r0, [pc, #48]	; (80011c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8001192:	490d      	ldr	r1, [pc, #52]	; (80011c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001194:	4a0d      	ldr	r2, [pc, #52]	; (80011cc <LoopForever+0xe>)
  movs r3, #0
 8001196:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001198:	e002      	b.n	80011a0 <LoopCopyDataInit>

0800119a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800119a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800119c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800119e:	3304      	adds	r3, #4

080011a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80011a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80011a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80011a4:	d3f9      	bcc.n	800119a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80011a6:	4a0a      	ldr	r2, [pc, #40]	; (80011d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80011a8:	4c0a      	ldr	r4, [pc, #40]	; (80011d4 <LoopForever+0x16>)
  movs r3, #0
 80011aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80011ac:	e001      	b.n	80011b2 <LoopFillZerobss>

080011ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80011ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80011b0:	3204      	adds	r2, #4

080011b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80011b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80011b4:	d3fb      	bcc.n	80011ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80011b6:	f000 f811 	bl	80011dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80011ba:	f7ff ffa5 	bl	8001108 <main>

080011be <LoopForever>:

LoopForever:
  b LoopForever
 80011be:	e7fe      	b.n	80011be <LoopForever>
  ldr   r0, =_estack
 80011c0:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80011c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80011c8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80011cc:	08001244 	.word	0x08001244
  ldr r2, =_sbss
 80011d0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80011d4:	2000001c 	.word	0x2000001c

080011d8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80011d8:	e7fe      	b.n	80011d8 <ADC1_2_IRQHandler>
	...

080011dc <__libc_init_array>:
 80011dc:	b570      	push	{r4, r5, r6, lr}
 80011de:	2600      	movs	r6, #0
 80011e0:	4d0c      	ldr	r5, [pc, #48]	; (8001214 <__libc_init_array+0x38>)
 80011e2:	4c0d      	ldr	r4, [pc, #52]	; (8001218 <__libc_init_array+0x3c>)
 80011e4:	1b64      	subs	r4, r4, r5
 80011e6:	10a4      	asrs	r4, r4, #2
 80011e8:	42a6      	cmp	r6, r4
 80011ea:	d109      	bne.n	8001200 <__libc_init_array+0x24>
 80011ec:	f000 f81a 	bl	8001224 <_init>
 80011f0:	2600      	movs	r6, #0
 80011f2:	4d0a      	ldr	r5, [pc, #40]	; (800121c <__libc_init_array+0x40>)
 80011f4:	4c0a      	ldr	r4, [pc, #40]	; (8001220 <__libc_init_array+0x44>)
 80011f6:	1b64      	subs	r4, r4, r5
 80011f8:	10a4      	asrs	r4, r4, #2
 80011fa:	42a6      	cmp	r6, r4
 80011fc:	d105      	bne.n	800120a <__libc_init_array+0x2e>
 80011fe:	bd70      	pop	{r4, r5, r6, pc}
 8001200:	f855 3b04 	ldr.w	r3, [r5], #4
 8001204:	4798      	blx	r3
 8001206:	3601      	adds	r6, #1
 8001208:	e7ee      	b.n	80011e8 <__libc_init_array+0xc>
 800120a:	f855 3b04 	ldr.w	r3, [r5], #4
 800120e:	4798      	blx	r3
 8001210:	3601      	adds	r6, #1
 8001212:	e7f2      	b.n	80011fa <__libc_init_array+0x1e>
 8001214:	0800123c 	.word	0x0800123c
 8001218:	0800123c 	.word	0x0800123c
 800121c:	0800123c 	.word	0x0800123c
 8001220:	08001240 	.word	0x08001240

08001224 <_init>:
 8001224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001226:	bf00      	nop
 8001228:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800122a:	bc08      	pop	{r3}
 800122c:	469e      	mov	lr, r3
 800122e:	4770      	bx	lr

08001230 <_fini>:
 8001230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001232:	bf00      	nop
 8001234:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001236:	bc08      	pop	{r3}
 8001238:	469e      	mov	lr, r3
 800123a:	4770      	bx	lr
